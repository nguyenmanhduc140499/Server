{"code":"import { GraphQLUnionType, } from 'graphql';\r\nimport { resolveTypesList, isObjectType, resolveType } from '~/services/utils';\r\nimport { UnionError } from './error';\r\nvar compileUnionCache = new WeakMap();\r\nfunction getDefaultResolver(types) {\r\n    return function (value, context, info) {\r\n        for (var _i = 0, types_1 = types; _i < types_1.length; _i++) {\r\n            var type = types_1[_i];\r\n            if (type.isTypeOf && type.isTypeOf(value, context, info)) {\r\n                return type;\r\n            }\r\n        }\r\n    };\r\n}\r\n/**\r\n * Resolves type, and if needed, tries to resolve it using typegql-aware types\r\n */\r\nfunction enhanceTypeResolver(originalResolver) {\r\n    return function (value, context, info) {\r\n        var rawResolvedType = originalResolver(value, context, info);\r\n        return resolveType(rawResolvedType);\r\n    };\r\n}\r\nfunction validateResolvedTypes(target, types) {\r\n    for (var _i = 0, types_2 = types; _i < types_2.length; _i++) {\r\n        var type = types_2[_i];\r\n        if (!isObjectType(type)) {\r\n            throw new UnionError(target, \"Every union type must be of type GraphQLObjectType. '\" + type + \"' is not.\");\r\n        }\r\n    }\r\n    return true;\r\n}\r\nexport function compileUnionType(target, config) {\r\n    if (compileUnionCache.has(target)) {\r\n        return compileUnionCache.get(target);\r\n    }\r\n    var types = config.types, resolveTypes = config.resolveTypes, name = config.name;\r\n    var resolvedTypes = resolveTypesList(types);\r\n    if (!validateResolvedTypes(target, resolvedTypes)) {\r\n        return;\r\n    }\r\n    var typeResolver = resolveTypes\r\n        ? enhanceTypeResolver(resolveTypes)\r\n        : getDefaultResolver(resolvedTypes);\r\n    var compiled = new GraphQLUnionType({\r\n        name: name,\r\n        resolveType: typeResolver,\r\n        types: resolvedTypes,\r\n    });\r\n    compileUnionCache.set(target, compiled);\r\n    return compiled;\r\n}\r\n//# sourceMappingURL=compiler.js.map","map":"{\"version\":3,\"file\":\"compiler.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../src/domains/union/compiler.ts\"],\"names\":[],\"mappings\":\"AAAA,OAAO,EACL,gBAAgB,GAIjB,MAAM,SAAS,CAAC;AAEjB,OAAO,EAAE,gBAAgB,EAAE,YAAY,EAAE,WAAW,EAAE,MAAM,kBAAkB,CAAC;AAE/E,OAAO,EAAE,UAAU,EAAE,MAAM,SAAS,CAAC;AAYrC,IAAM,iBAAiB,GAAG,IAAI,OAAO,EAA8B,CAAC;AAEpE,SAAS,kBAAkB,CAAC,KAA0B;IACpD,OAAO,UAAC,KAAU,EAAE,OAAY,EAAE,IAAS;QACzC,KAAiB,UAAK,EAAL,eAAK,EAAL,mBAAK,EAAL,IAAK,EAAE;YAAnB,IAAI,IAAI,cAAA;YACX,IAAI,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,OAAO,EAAE,IAAI,CAAC,EAAE;gBACxD,OAAO,IAAI,CAAC;aACb;SACF;IACH,CAAC,CAAC;AACJ,CAAC;AAED;;GAEG;AACH,SAAS,mBAAmB,CAC1B,gBAAmC;IAEnC,OAAO,UAAC,KAAK,EAAE,OAAO,EAAE,IAAI;QAC1B,IAAM,eAAe,GAAG,gBAAgB,CAAC,KAAK,EAAE,OAAO,EAAE,IAAI,CAAC,CAAC;QAC/D,OAAO,WAAW,CAAC,eAAe,CAAC,CAAC;IACtC,CAAC,CAAC;AACJ,CAAC;AAED,SAAS,qBAAqB,CAC5B,MAAgB,EAChB,KAAoB;IAEpB,KAAiB,UAAK,EAAL,eAAK,EAAL,mBAAK,EAAL,IAAK,EAAE;QAAnB,IAAI,IAAI,cAAA;QACX,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,EAAE;YACvB,MAAM,IAAI,UAAU,CAClB,MAAM,EACN,0DAAwD,IAAI,cAAW,CACxE,CAAC;SACH;KACF;IACD,OAAO,IAAI,CAAC;AACd,CAAC;AAED,MAAM,UAAU,gBAAgB,CAAC,MAAgB,EAAE,MAAoB;IACrE,IAAI,iBAAiB,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE;QACjC,OAAO,iBAAiB,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;KACtC;IAEO,IAAA,oBAAK,EAAE,kCAAY,EAAE,kBAAI,CAAY;IAE7C,IAAM,aAAa,GAAG,gBAAgB,CAAC,KAAK,CAAC,CAAC;IAE9C,IAAI,CAAC,qBAAqB,CAAC,MAAM,EAAE,aAAa,CAAC,EAAE;QACjD,OAAO;KACR;IAED,IAAM,YAAY,GAAG,YAAY;QAC/B,CAAC,CAAC,mBAAmB,CAAC,YAAY,CAAC;QACnC,CAAC,CAAC,kBAAkB,CAAC,aAAa,CAAC,CAAC;IAEtC,IAAM,QAAQ,GAAG,IAAI,gBAAgB,CAAC;QACpC,IAAI,MAAA;QACJ,WAAW,EAAE,YAAY;QACzB,KAAK,EAAE,aAAoC;KAC5C,CAAC,CAAC;IAEH,iBAAiB,CAAC,GAAG,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC;IACxC,OAAO,QAAQ,CAAC;AAClB,CAAC\"}"}
