{"code":"import { isType, GraphQLList, GraphQLNonNull } from 'graphql';\r\nimport { objectTypeRegistry, compileObjectType, inputObjectTypeRegistry, compileInputObjectType, enumsRegistry, unionRegistry, } from '~/domains';\r\nimport { parseNativeTypeToGraphQL, isParsableScalar } from './parseNative';\r\n/**\r\n *\r\n * @param input\r\n * @param allowThunk\r\n * @param preferInputType We want to be able to have single class used both for output and input type - thats why we need to be able to set resolve priority in different scenarios\r\n */\r\nexport function resolveType(input, preferInputType, allowThunk) {\r\n    if (preferInputType === void 0) { preferInputType = false; }\r\n    if (allowThunk === void 0) { allowThunk = true; }\r\n    if (isType(input)) {\r\n        return input;\r\n    }\r\n    if (isParsableScalar(input)) {\r\n        return parseNativeTypeToGraphQL(input);\r\n    }\r\n    if (Array.isArray(input)) {\r\n        return resolveListType(input);\r\n    }\r\n    if (enumsRegistry.has(input)) {\r\n        return enumsRegistry.get(input);\r\n    }\r\n    if (unionRegistry.has(input)) {\r\n        return unionRegistry.get(input)();\r\n    }\r\n    if (preferInputType && inputObjectTypeRegistry.has(input)) {\r\n        return compileInputObjectType(input);\r\n    }\r\n    if (objectTypeRegistry.has(input)) {\r\n        return compileObjectType(input);\r\n    }\r\n    if (inputObjectTypeRegistry.has(input)) {\r\n        return compileInputObjectType(input);\r\n    }\r\n    if (input === Promise) {\r\n        return;\r\n    }\r\n    if (!allowThunk || typeof input !== 'function') {\r\n        return;\r\n    }\r\n    return resolveType(input(), preferInputType, false);\r\n}\r\nfunction resolveListType(input, preferInputType) {\r\n    if (preferInputType === void 0) { preferInputType = false; }\r\n    if (input.length !== 1) {\r\n        return;\r\n    }\r\n    var itemType = input[0];\r\n    var resolvedItemType = resolveType(itemType, preferInputType);\r\n    if (!resolvedItemType) {\r\n        return;\r\n    }\r\n    return new GraphQLList(new GraphQLNonNull(resolvedItemType));\r\n}\r\nexport function resolveTypesList(types, preferInputType) {\r\n    if (preferInputType === void 0) { preferInputType = false; }\r\n    if (Array.isArray(types)) {\r\n        return types.map(function (type) {\r\n            return resolveType(type, preferInputType);\r\n        });\r\n    }\r\n    return types().map(function (type) {\r\n        return resolveType(type, preferInputType);\r\n    });\r\n}\r\n//# sourceMappingURL=resolve.js.map","map":"{\"version\":3,\"file\":\"resolve.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../src/services/utils/gql/types/resolve.ts\"],\"names\":[],\"mappings\":\"AAAA,OAAO,EAAE,MAAM,EAAe,WAAW,EAAE,cAAc,EAAE,MAAM,SAAS,CAAC;AAE3E,OAAO,EACL,kBAAkB,EAClB,iBAAiB,EACjB,uBAAuB,EACvB,sBAAsB,EACtB,aAAa,EACb,aAAa,GACd,MAAM,WAAW,CAAC;AACnB,OAAO,EAAE,wBAAwB,EAAE,gBAAgB,EAAE,MAAM,eAAe,CAAC;AAE3E;;;;;GAKG;AACH,MAAM,UAAU,WAAW,CACzB,KAAU,EACV,eAAuB,EACvB,UAAiB;IADjB,gCAAA,EAAA,uBAAuB;IACvB,2BAAA,EAAA,iBAAiB;IAEjB,IAAI,MAAM,CAAC,KAAK,CAAC,EAAE;QACjB,OAAO,KAAK,CAAC;KACd;IAED,IAAI,gBAAgB,CAAC,KAAK,CAAC,EAAE;QAC3B,OAAO,wBAAwB,CAAC,KAAK,CAAC,CAAC;KACxC;IAED,IAAI,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;QACxB,OAAO,eAAe,CAAC,KAAK,CAAC,CAAC;KAC/B;IAED,IAAI,aAAa,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE;QAC5B,OAAO,aAAa,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;KACjC;IAED,IAAI,aAAa,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE;QAC5B,OAAO,aAAa,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE,CAAC;KACnC;IAED,IAAI,eAAe,IAAI,uBAAuB,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE;QACzD,OAAO,sBAAsB,CAAC,KAAK,CAAC,CAAC;KACtC;IAED,IAAI,kBAAkB,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE;QACjC,OAAO,iBAAiB,CAAC,KAAK,CAAC,CAAC;KACjC;IAED,IAAI,uBAAuB,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE;QACtC,OAAO,sBAAsB,CAAC,KAAK,CAAC,CAAC;KACtC;IAED,IAAI,KAAK,KAAK,OAAO,EAAE;QACrB,OAAO;KACR;IAED,IAAI,CAAC,UAAU,IAAI,OAAO,KAAK,KAAK,UAAU,EAAE;QAC9C,OAAO;KACR;IAED,OAAO,WAAW,CAAC,KAAK,EAAE,EAAE,eAAe,EAAE,KAAK,CAAC,CAAC;AACtD,CAAC;AAED,SAAS,eAAe,CAAC,KAAY,EAAE,eAAuB;IAAvB,gCAAA,EAAA,uBAAuB;IAC5D,IAAI,KAAK,CAAC,MAAM,KAAK,CAAC,EAAE;QACtB,OAAO;KACR;IACM,IAAA,mBAAQ,CAAU;IAEzB,IAAM,gBAAgB,GAAG,WAAW,CAAC,QAAQ,EAAE,eAAe,CAAC,CAAC;IAEhE,IAAI,CAAC,gBAAgB,EAAE;QACrB,OAAO;KACR;IACD,OAAO,IAAI,WAAW,CAAC,IAAI,cAAc,CAAC,gBAAgB,CAAC,CAAC,CAAC;AAC/D,CAAC;AAED,MAAM,UAAU,gBAAgB,CAC9B,KAAmB,EACnB,eAAuB;IAAvB,gCAAA,EAAA,uBAAuB;IAEvB,IAAI,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;QACxB,OAAO,KAAK,CAAC,GAAG,CAAC,UAAA,IAAI;YACnB,OAAO,WAAW,CAAC,IAAI,EAAE,eAAe,CAAC,CAAC;QAC5C,CAAC,CAAC,CAAC;KACJ;IACD,OAAO,KAAK,EAAE,CAAC,GAAG,CAAC,UAAA,IAAI;QACrB,OAAO,WAAW,CAAC,IAAI,EAAE,eAAe,CAAC,CAAC;IAC5C,CAAC,CAAC,CAAC;AACL,CAAC\"}"}
