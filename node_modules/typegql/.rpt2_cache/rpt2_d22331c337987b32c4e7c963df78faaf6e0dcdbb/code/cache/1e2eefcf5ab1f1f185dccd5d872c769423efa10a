{"code":"export { schemaRootsRegistry, mutationFieldsRegistry, queryFieldsRegistry, } from './registry';\r\nimport { schemaRootsRegistry } from './registry';\r\nimport { showDeprecationWarning } from '~/services/utils';\r\n// import { compileSchema } from './compiler';\r\nexport { compileSchema } from './compiler';\r\nexport { Query, Mutation } from './rootFields';\r\nexport { isSchemaRoot, getSchemaRootInstance } from './services';\r\nexport function SchemaRoot(config) {\r\n    if (config === void 0) { config = {}; }\r\n    return function (target) {\r\n        schemaRootsRegistry.set(target, config);\r\n    };\r\n}\r\nexport function Schema(config) {\r\n    if (config === void 0) { config = {}; }\r\n    showDeprecationWarning('Use @SchemaRoot instead and compile like: compileSchema({ roots: [RootA, RootB] })', Schema);\r\n    return SchemaRoot(config);\r\n}\r\n//# sourceMappingURL=index.js.map","map":"{\"version\":3,\"file\":\"index.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../src/domains/schema/index.ts\"],\"names\":[],\"mappings\":\"AAAA,OAAO,EACL,mBAAmB,EACnB,sBAAsB,EACtB,mBAAmB,GACpB,MAAM,YAAY,CAAC;AACpB,OAAO,EAAE,mBAAmB,EAAoB,MAAM,YAAY,CAAC;AACnE,OAAO,EAAE,sBAAsB,EAAE,MAAM,kBAAkB,CAAC;AAC1D,8CAA8C;AAC9C,OAAO,EAAE,aAAa,EAAE,MAAM,YAAY,CAAC;AAC3C,OAAO,EAAE,KAAK,EAAE,QAAQ,EAAE,MAAM,cAAc,CAAC;AAC/C,OAAO,EAAE,YAAY,EAAE,qBAAqB,EAAE,MAAM,YAAY,CAAA;AAEhE,MAAM,UAAU,UAAU,CAAC,MAA6B;IAA7B,uBAAA,EAAA,WAA6B;IACtD,OAAO,UAAA,MAAM;QACX,mBAAmB,CAAC,GAAG,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;IAC1C,CAAC,CAAC;AACJ,CAAC;AAED,MAAM,UAAU,MAAM,CAAC,MAA6B;IAA7B,uBAAA,EAAA,WAA6B;IAClD,sBAAsB,CACpB,oFAAoF,EACpF,MAAM,CACP,CAAC;IACF,OAAO,UAAU,CAAC,MAAM,CAAC,CAAC;AAC5B,CAAC\"}"}
