{"code":"import { Field, compileFieldConfig } from '~/domains/field';\r\nimport { queryFieldsRegistry, mutationFieldsRegistry, schemaRootsRegistry, } from './registry';\r\nimport { SchemaFieldError } from './error';\r\nfunction validateRootSchemaField(targetInstance, fieldName) {\r\n    if (!targetInstance[fieldName] &&\r\n        !targetInstance.constructor.prototype[fieldName]) {\r\n        throw new SchemaFieldError(targetInstance.constructor, fieldName, \"Every root schema field must regular class function\");\r\n    }\r\n}\r\nfunction requireSchemaRoot(target, fieldName) {\r\n    if (schemaRootsRegistry.has(target)) {\r\n        return;\r\n    }\r\n    throw new SchemaFieldError(target, fieldName, \"Root field must be registered on class decorated with @Schema\");\r\n}\r\nfunction getFieldCompiler(target, fieldName) {\r\n    var fieldCompiler = function () {\r\n        requireSchemaRoot(target, fieldName);\r\n        var compiledField = compileFieldConfig(target, fieldName);\r\n        return compiledField;\r\n    };\r\n    return fieldCompiler;\r\n}\r\n// special fields\r\nexport function Query(options) {\r\n    return function (targetInstance, fieldName) {\r\n        validateRootSchemaField(targetInstance, fieldName);\r\n        Field(options)(targetInstance, fieldName);\r\n        var fieldCompiler = getFieldCompiler(targetInstance.constructor, fieldName);\r\n        queryFieldsRegistry.set(targetInstance.constructor, fieldName, fieldCompiler);\r\n    };\r\n}\r\nexport function Mutation(options) {\r\n    return function (targetInstance, fieldName) {\r\n        validateRootSchemaField(targetInstance, fieldName);\r\n        Field(options)(targetInstance, fieldName);\r\n        var fieldCompiler = getFieldCompiler(targetInstance.constructor, fieldName);\r\n        mutationFieldsRegistry.set(targetInstance.constructor, fieldName, fieldCompiler);\r\n    };\r\n}\r\n//# sourceMappingURL=rootFields.js.map","map":"{\"version\":3,\"file\":\"rootFields.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../src/domains/schema/rootFields.ts\"],\"names\":[],\"mappings\":\"AAAA,OAAO,EAAE,KAAK,EAAgB,kBAAkB,EAAE,MAAM,iBAAiB,CAAC;AAC1E,OAAO,EACL,mBAAmB,EACnB,sBAAsB,EACtB,mBAAmB,GACpB,MAAM,YAAY,CAAC;AACpB,OAAO,EAAE,gBAAgB,EAAE,MAAM,SAAS,CAAC;AAE3C,SAAS,uBAAuB,CAAC,cAAsB,EAAE,SAAiB;IACxE,IACE,CAAE,cAAsB,CAAC,SAAS,CAAC;QACnC,CAAC,cAAc,CAAC,WAAW,CAAC,SAAS,CAAC,SAAS,CAAC,EAChD;QACA,MAAM,IAAI,gBAAgB,CACxB,cAAc,CAAC,WAAW,EAC1B,SAAS,EACT,qDAAqD,CACtD,CAAC;KACH;AACH,CAAC;AAED,SAAS,iBAAiB,CAAC,MAAgB,EAAE,SAAiB;IAC5D,IAAI,mBAAmB,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE;QACnC,OAAO;KACR;IACD,MAAM,IAAI,gBAAgB,CACxB,MAAM,EACN,SAAS,EACT,+DAA+D,CAChE,CAAC;AACJ,CAAC;AAED,SAAS,gBAAgB,CAAC,MAAgB,EAAE,SAAiB;IAC3D,IAAM,aAAa,GAAG;QACpB,iBAAiB,CAAC,MAAM,EAAE,SAAS,CAAC,CAAC;QACrC,IAAM,aAAa,GAAG,kBAAkB,CACtC,MAAM,EACN,SAAS,CACV,CAAC;QACF,OAAO,aAAa,CAAC;IACvB,CAAC,CAAC;IAEF,OAAO,aAAa,CAAC;AACvB,CAAC;AAED,iBAAiB;AACjB,MAAM,UAAU,KAAK,CAAC,OAAsB;IAC1C,OAAO,UAAC,cAAsB,EAAE,SAAiB;QAC/C,uBAAuB,CAAC,cAAc,EAAE,SAAS,CAAC,CAAC;QACnD,KAAK,CAAC,OAAO,CAAC,CAAC,cAAc,EAAE,SAAS,CAAC,CAAC;QAC1C,IAAM,aAAa,GAAG,gBAAgB,CAAC,cAAc,CAAC,WAAW,EAAE,SAAS,CAAC,CAAC;QAC9E,mBAAmB,CAAC,GAAG,CACrB,cAAc,CAAC,WAAW,EAC1B,SAAS,EACT,aAAa,CACd,CAAC;IACJ,CAAC,CAAC;AACJ,CAAC;AAED,MAAM,UAAU,QAAQ,CAAC,OAAsB;IAC7C,OAAO,UAAC,cAAsB,EAAE,SAAiB;QAC/C,uBAAuB,CAAC,cAAc,EAAE,SAAS,CAAC,CAAC;QACnD,KAAK,CAAC,OAAO,CAAC,CAAC,cAAc,EAAE,SAAS,CAAC,CAAC;QAC1C,IAAM,aAAa,GAAG,gBAAgB,CAAC,cAAc,CAAC,WAAW,EAAE,SAAS,CAAC,CAAC;QAC9E,sBAAsB,CAAC,GAAG,CACxB,cAAc,CAAC,WAAW,EAC1B,SAAS,EACT,aAAa,CACd,CAAC;IACJ,CAAC,CAAC;AACJ,CAAC\"}"}
