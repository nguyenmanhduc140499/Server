{"code":"import * as objectPath from 'object-path';\r\nfunction flattenPaths(paths) {\r\n    return paths.reduce((accumulatedPath, nextPath) => {\r\n        if (Array.isArray(nextPath)) {\r\n            return [...accumulatedPath, ...nextPath.map(pathPart => `${pathPart}`)];\r\n        }\r\n        return [...accumulatedPath, `${nextPath}`];\r\n    }, []);\r\n}\r\nexport class DeepWeakMap {\r\n    constructor() {\r\n        this.map = new WeakMap();\r\n    }\r\n    isEmpty(target) {\r\n        return !Object.keys(this.getAll(target)).length;\r\n    }\r\n    getAll(target) {\r\n        const { map } = this;\r\n        if (!map.has(target)) {\r\n            map.set(target, {});\r\n        }\r\n        return map.get(target);\r\n    }\r\n    set(target, path, value) {\r\n        objectPath.set(this.getAll(target), path, value);\r\n    }\r\n    get(target, ...paths) {\r\n        const path = flattenPaths(paths);\r\n        return objectPath.get(this.getAll(target), path);\r\n    }\r\n    has(target, ...paths) {\r\n        const path = flattenPaths(paths);\r\n        return !!this.get(target, path);\r\n    }\r\n}\r\n//# sourceMappingURL=index.js.map","map":"{\"version\":3,\"file\":\"index.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../src/services/utils/deepWeakMap/index.ts\"],\"names\":[],\"mappings\":\"AAAA,OAAO,KAAK,UAAU,MAAM,aAAa,CAAC;AAI1C,SAAS,YAAY,CAAC,KAAwB;IAC5C,OAAO,KAAK,CAAC,MAAM,CAAC,CAAC,eAAyB,EAAE,QAAQ,EAAE,EAAE;QAC1D,IAAI,KAAK,CAAC,OAAO,CAAC,QAAQ,CAAC,EAAE;YAC3B,OAAO,CAAC,GAAG,eAAe,EAAE,GAAG,QAAQ,CAAC,GAAG,CAAC,QAAQ,CAAC,EAAE,CAAC,GAAG,QAAQ,EAAE,CAAC,CAAC,CAAC;SACzE;QACD,OAAO,CAAC,GAAG,eAAe,EAAE,GAAG,QAAQ,EAAE,CAAC,CAAC;IAC7C,CAAC,EAAE,EAAE,CAAa,CAAC;AACrB,CAAC;AAED,MAAM,OAAO,WAAW;IAMtB;QACE,IAAI,CAAC,GAAG,GAAG,IAAI,OAAO,EAAE,CAAC;IAC3B,CAAC;IAED,OAAO,CAAC,MAAW;QACjB,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC;IAClD,CAAC;IAED,MAAM,CAAC,MAAW;QAChB,MAAM,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC;QACrB,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE;YACpB,GAAG,CAAC,GAAG,CAAC,MAAM,EAAE,EAAe,CAAC,CAAC;SAClC;QACD,OAAO,GAAG,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;IACzB,CAAC;IAED,GAAG,CAAC,MAAW,EAAE,IAAqB,EAAE,KAAY;QAClD,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAQ,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC;IAC1D,CAAC;IAED,GAAG,CAAC,MAAW,EAAE,GAAG,KAAwB;QAC1C,MAAM,IAAI,GAAG,YAAY,CAAC,KAAK,CAAC,CAAC;QACjC,OAAO,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAQ,EAAE,IAAI,CAAC,CAAC;IAC1D,CAAC;IAED,GAAG,CAAC,MAAW,EAAE,GAAG,KAAwB;QAC1C,MAAM,IAAI,GAAG,YAAY,CAAC,KAAK,CAAC,CAAC;QACjC,OAAO,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;IAClC,CAAC;CACF\"}","dts":{"name":"/Users/adampietrasiak/dev/oss/typegql/services/utils/deepWeakMap/index.d.ts","writeByteOrderMark":false,"text":"export declare type DeepWeakMapPath = (string | number) | (string | number)[];\r\nexport declare class DeepWeakMap<Key extends Object, Value, Structure = {\r\n    [key: string]: Value;\r\n}> {\r\n    private map;\r\n    constructor();\r\n    isEmpty(target: Key): boolean;\r\n    getAll(target: Key): Structure;\r\n    set(target: Key, path: DeepWeakMapPath, value: Value): void;\r\n    get(target: Key, ...paths: DeepWeakMapPath[]): Value;\r\n    has(target: Key, ...paths: DeepWeakMapPath[]): boolean;\r\n}\r\n"}}
