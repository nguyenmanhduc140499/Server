{"code":"export function convertNativeEnumToGraphQLEnumValues(enumDef) {\r\n    const valueConfigMap = {};\r\n    Object.keys(enumDef).map(key => {\r\n        if (!isNaN(key)) {\r\n            return;\r\n        }\r\n        const value = enumDef[key];\r\n        valueConfigMap[key] = {\r\n            value,\r\n        };\r\n    });\r\n    return valueConfigMap;\r\n}\r\n//# sourceMappingURL=services.js.map","map":"{\"version\":3,\"file\":\"services.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../src/domains/enum/services.ts\"],\"names\":[],\"mappings\":\"AAEA,MAAM,UAAU,oCAAoC,CAClD,OAAY;IAEZ,MAAM,cAAc,GAA8B,EAAE,CAAC;IACrD,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE;QAC7B,IAAI,CAAC,KAAK,CAAC,GAAU,CAAC,EAAE;YACtB,OAAO;SACR;QACD,MAAM,KAAK,GAAG,OAAO,CAAC,GAAG,CAAC,CAAC;QAC3B,cAAc,CAAC,GAAG,CAAC,GAAG;YACpB,KAAK;SACN,CAAC;IACJ,CAAC,CAAC,CAAC;IACH,OAAO,cAAc,CAAC;AACxB,CAAC\"}","dts":{"name":"/Users/adampietrasiak/dev/oss/typegql/domains/enum/services.d.ts","writeByteOrderMark":false,"text":"import { GraphQLEnumValueConfigMap } from 'graphql';\r\nexport declare function convertNativeEnumToGraphQLEnumValues(enumDef: any): GraphQLEnumValueConfigMap;\r\n"}}
