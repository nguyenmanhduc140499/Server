{"code":"import { DeepWeakMap } from '~/services/utils';\r\nimport { HookError } from './error';\r\nexport const fieldBeforeHooksRegistry = new DeepWeakMap();\r\nexport const fieldAfterHooksRegistry = new DeepWeakMap();\r\nexport function registerFieldBeforeHook(target, fieldName, hook) {\r\n    if (!hook) {\r\n        throw new HookError(target, fieldName, `Field @Before hook function must be supplied.`);\r\n    }\r\n    const currentHooks = fieldBeforeHooksRegistry.get(target, fieldName) || [];\r\n    fieldBeforeHooksRegistry.set(target, fieldName, [hook, ...currentHooks]);\r\n}\r\nexport function registerFieldAfterHook(target, fieldName, hook) {\r\n    if (!hook) {\r\n        throw new HookError(target, fieldName, `Field @After hook function must be supplied.`);\r\n    }\r\n    const currentHooks = fieldAfterHooksRegistry.get(target, fieldName) || [];\r\n    fieldAfterHooksRegistry.set(target, fieldName, [hook, ...currentHooks]);\r\n}\r\n//# sourceMappingURL=registry.js.map","map":"{\"version\":3,\"file\":\"registry.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../src/domains/hooks/registry.ts\"],\"names\":[],\"mappings\":\"AACA,OAAO,EAAE,WAAW,EAAE,MAAM,kBAAkB,CAAC;AAC/C,OAAO,EAAE,SAAS,EAAE,MAAM,SAAS,CAAC;AAiBpC,MAAM,CAAC,MAAM,wBAAwB,GAAG,IAAI,WAAW,EAIpD,CAAC;AAEJ,MAAM,CAAC,MAAM,uBAAuB,GAAG,IAAI,WAAW,EAInD,CAAC;AAEJ,MAAM,UAAU,uBAAuB,CACrC,MAAgB,EAChB,SAAiB,EACjB,IAAkB;IAElB,IAAI,CAAC,IAAI,EAAE;QACT,MAAM,IAAI,SAAS,CACjB,MAAM,EACN,SAAS,EACT,+CAA+C,CAChD,CAAC;KACH;IACD,MAAM,YAAY,GAAG,wBAAwB,CAAC,GAAG,CAAC,MAAM,EAAE,SAAS,CAAC,IAAI,EAAE,CAAC;IAC3E,wBAAwB,CAAC,GAAG,CAAC,MAAM,EAAE,SAAS,EAAE,CAAC,IAAI,EAAE,GAAG,YAAY,CAAC,CAAC,CAAC;AAC3E,CAAC;AAED,MAAM,UAAU,sBAAsB,CACpC,MAAgB,EAChB,SAAiB,EACjB,IAAkB;IAElB,IAAI,CAAC,IAAI,EAAE;QACT,MAAM,IAAI,SAAS,CACjB,MAAM,EACN,SAAS,EACT,8CAA8C,CAC/C,CAAC;KACH;IACD,MAAM,YAAY,GAAG,uBAAuB,CAAC,GAAG,CAAC,MAAM,EAAE,SAAS,CAAC,IAAI,EAAE,CAAC;IAC1E,uBAAuB,CAAC,GAAG,CAAC,MAAM,EAAE,SAAS,EAAE,CAAC,IAAI,EAAE,GAAG,YAAY,CAAC,CAAC,CAAC;AAC1E,CAAC\"}","dts":{"name":"/Users/adampietrasiak/dev/oss/typegql/domains/hooks/registry.d.ts","writeByteOrderMark":false,"text":"import { GraphQLResolveInfo } from 'graphql';\r\nimport { DeepWeakMap } from '~/services/utils';\r\nexport interface HookExecutorResolverArgs {\r\n    source: any;\r\n    args: {\r\n        [argName: string]: any;\r\n    };\r\n    context: any;\r\n    info: GraphQLResolveInfo;\r\n}\r\nexport declare type HookExecutor<Result = void> = (data: HookExecutorResolverArgs) => Result | Promise<Result>;\r\nexport interface AllRegisteredHooks {\r\n    [fieldName: string]: HookExecutor;\r\n}\r\nexport declare const fieldBeforeHooksRegistry: DeepWeakMap<Function, HookExecutor<void>[], AllRegisteredHooks>;\r\nexport declare const fieldAfterHooksRegistry: DeepWeakMap<Function, HookExecutor<void>[], AllRegisteredHooks>;\r\nexport declare function registerFieldBeforeHook(target: Function, fieldName: string, hook: HookExecutor): void;\r\nexport declare function registerFieldAfterHook(target: Function, fieldName: string, hook: HookExecutor): void;\r\n"}}
